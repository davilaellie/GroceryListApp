@page "/"

@using OH.UI.GroceryList
@using OH.Common.GroceryList.Models
@using OH.Common.GroceryList.ViewModels
@using State

@inject IShoppingListService _shoppingService
@inject IUserService _userService
@inject NavigationManager NavManager

<input class="btn btn-success" type="button" name="myBtn" value="Click Here!" @onclick="NavigateToProfilePage" />
<head>
    <title>Home Page</title>
</head>
<body>
    <header class="main-header"></header>
    <h1 style="align-content: center">Welcome to your grocery list</h1>
    <hr />
    @if (ClientState.Person == null)
    {

        <div class="Login">

            <section class="ExistingUser">
                <h2>Please Enter your User ID:</h2>

                @*<input type="text" @bind="UserId" />*@

                <input type="text" @bind="Person.Id" />
                <input type="button" value="Submit" @onclick="GetUserShoppingList" />
            </section>
            <br />

            <section class="NewUser">
                <h3>Or Create a New User Profile:</h3>
                <div class="form-row form-row-right btn-row">
                    <button class="btn btn-primary" value="Create New Profile" @onclick="CreateNewUserForm" />
                </div>

            </section>

        </div>
    }
</body>
<label>@ErrorMessage</label>






@code
{
    public User Person { get; set; }
    public string ErrorMessage { get; set; }
    public List<ShoppingList> UserList { get; set; }


    protected override void OnInitialized()
    {
        if (ClientState.Person != null)
        {

            Person = ClientState.Person;
        }
        else
        {
            Person = new User();

        }
    }

    private async Task GetUserShoppingList()
    {
        if (Person.Id <= 0)
        {
            ErrorMessage = "This is not a valid ID. Please enter a valid ID or create a new user.";
            return;
        }
        else
        {
            ClientState.Person = await _userService.GetUserById(Person.Id);
            Person = ClientState.Person;



            ClientState.ShoppingListItems = await _shoppingService.GetShoppingListByUser(Person.Id);
            UserList = ClientState.ShoppingListItems;

            NavManager.NavigateTo("/profile");

        }
    }

    private void CreateNewUserForm()
    {
        NavManager.NavigateTo("/newuser");
    }

    private void NavigateToProfilePage()
    {
        NavManager.NavigateTo("/profile");
    }
}


